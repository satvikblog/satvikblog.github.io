{"title":"Linux Fundamentals Module - HTB","uid":"4c017bf823830f33adecd64aa365ea2f","slug":"HTB/Linux-Fundamentals-Module-HTB","date":"2024-05-27T17:47:53.000Z","updated":"2024-06-03T14:45:37.981Z","comments":true,"path":"api/articles/HTB/Linux-Fundamentals-Module-HTB.json","keywords":null,"cover":"https://i0.wp.com/letslearnabout.net/wp-content/uploads/2023/06/image-6.png?resize=810%2C456&ssl=1","content":"<h1 id=\"Linux-Structure\"><a href=\"#Linux-Structure\" class=\"headerlink\" title=\"Linux Structure\"></a>Linux Structure</h1><h2 id=\"History\"><a href=\"#History\" class=\"headerlink\" title=\"History\"></a>History</h2><p>Many events led up to creating the first Linux kernel and, ultimately, the Linux operating system (OS), starting with the Unix operating system’s release by Ken Thompson and Dennis Ritchie (whom both worked for AT&amp;T at the time) in 1970. The Berkeley Software Distribution (BSD) was released in 1977, but since it contained the Unix code owned by AT&amp;T, a resulting lawsuit limited the development of BSD. Richard Stallman started the GNU project in 1983. His goal was to create a free Unix-like operating system, and part of his work resulted in the GNU General Public License (GPL) being created. Projects by others over the years failed to result in a working, free kernel that would become widely adopted until the creation of the Linux kernel.</p>\n<p>At first, Linux was a personal project started in 1991 by a Finnish student named Linus Torvalds. His goal was to create a new, free operating system kernel. Over the years, the Linux kernel has gone from a small number of files written in C under licensing that prohibited commercial distribution to the latest version with over 23 million source code lines (comments excluded), licensed under the GNU General Public License v2.</p>\n<p>Linux is available in over 600 distributions (or an operating system based on the Linux kernel and supporting software and libraries). Some of the most popular and well-known being Ubuntu, Debian, Fedora, OpenSUSE, elementary, Manjaro, Gentoo Linux, RedHat, and Linux Mint.</p>\n<p>Linux is generally considered more secure than other operating systems, and while it has had many kernel vulnerabilities in the past, it is becoming less and less frequent. It is less susceptible to malware than Windows operating systems and is very frequently updated. Linux is also very stable and generally affords very high performance to the end-user. However, it can be more difficult for beginners and does not have as many hardware drivers as Windows.</p>\n<p>Since Linux is free and open-source, the source code can be modified and distributed commercially or non-commercially by anyone. Linux-based operating systems run on servers, mainframes, desktops, embedded systems such as routers, televisions, video game consoles, and more. The overall Android operating system that runs on smartphones and tablets is based on the Linux kernel, and because of this, Linux is the most widely installed operating system.</p>\n<p>Linux is an operating system like Windows, iOS, Android, or macOS. An OS is software that manages all of the hardware resources associated with our computer. That means that an OS manages the whole communication between software and hardware. Also, there exist many different distributions (distro). It is like a version of Windows operating systems.</p>\n<p>With the interactive instances, we get access to the Pwnbox, a customized version of Parrot OS. This will be the primary OS we will work with through the modules. Parrot OS is a Debian-based Linux distribution that focuses on security, privacy, and development.</p>\n<h2 id=\"Philosophy\"><a href=\"#Philosophy\" class=\"headerlink\" title=\"Philosophy\"></a>Philosophy</h2><p>Linux follows five core principles:</p>\n<table>\n<thead>\n<tr>\n<th>Principle</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Everything is a file</td>\n<td>All configuration files for the various services running on the Linux operating system are stored in one or more text files.</td>\n</tr>\n<tr>\n<td>Small, single-purpose programs</td>\n<td>Linux offers many different tools that we will work with, which can be combined to work together.</td>\n</tr>\n<tr>\n<td>Ability to chain programs together</td>\n<td>The integration and combination of different tools enable us to carry out many large and complex tasks, such as processing or filtering specific data results.</td>\n</tr>\n<tr>\n<td>Avoid captive user interfaces</td>\n<td>Linux is designed to work mainly with the shell (or terminal), which gives the user greater control over the operating system.</td>\n</tr>\n<tr>\n<td>Configuration data stored in a text file</td>\n<td>An example of such a file is the &#x2F;etc&#x2F;passwd file, which stores all users registered on the system.</td>\n</tr>\n</tbody></table>\n<h2 id=\"Components\"><a href=\"#Components\" class=\"headerlink\" title=\"Components\"></a>Components</h2><table>\n<thead>\n<tr>\n<th>Component</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Bootloader</td>\n<td>A piece of code that runs to guide the booting process to start the operating system. Parrot Linux uses the GRUB Bootloader.</td>\n</tr>\n<tr>\n<td>OS Kernel</td>\n<td>The kernel is the main component of an operating system. It manages the resources for system’s I&#x2F;O devices at the hardware level.</td>\n</tr>\n<tr>\n<td>Daemons</td>\n<td>Background services are called “daemons” in Linux. Their purpose is to ensure that key functions such as scheduling, printing, and multimedia are working correctly. These small programs load after we booted or log into the computer.</td>\n</tr>\n<tr>\n<td>OS Shell</td>\n<td>The operating system shell or the command language interpreter (also known as the command line) is the interface between the OS and the user. This interface allows the user to tell the OS what to do. The most commonly used shells are Bash, Tcsh&#x2F;Csh, Ksh, Zsh, and Fish.</td>\n</tr>\n<tr>\n<td>Graphics server</td>\n<td>This provides a graphical sub-system (server) called “X” or “X-server” that allows graphical programs to run locally or remotely on the X-windowing system.</td>\n</tr>\n<tr>\n<td>Window Manager</td>\n<td>Also known as a graphical user interface (GUI). There are many options, including GNOME, KDE, MATE, Unity, and Cinnamon. A desktop environment usually has several applications, including file and web browsers. These allow the user to access and manage the essential and frequently accessed features and services of an operating system.</td>\n</tr>\n<tr>\n<td>Utilities</td>\n<td>Applications or utilities are programs that perform particular functions for the user or another program.</td>\n</tr>\n</tbody></table>\n<h2 id=\"Linux-Architecture\"><a href=\"#Linux-Architecture\" class=\"headerlink\" title=\"Linux Architecture\"></a>Linux Architecture</h2><p>The Linux operating system can be broken down into layers:</p>\n<table>\n<thead>\n<tr>\n<th>Layer</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Hardware</td>\n<td>Peripheral devices such as the system’s RAM, hard drive, CPU, and others.</td>\n</tr>\n<tr>\n<td>Kernel</td>\n<td>The core of the Linux operating system whose function is to virtualize and control common computer hardware resources like CPU, allocated memory, accessed data, and others. The kernel gives each process its own virtual resources and prevents&#x2F;mitigates conflicts between different processes.</td>\n</tr>\n<tr>\n<td>Shell</td>\n<td>A command-line interface (CLI), also known as a shell that a user can enter commands into to execute the kernel’s functions.</td>\n</tr>\n<tr>\n<td>System Utility</td>\n<td>Makes available to the user all of the operating system’s functionality.</td>\n</tr>\n</tbody></table>\n<h2 id=\"File-System-Hierarchy\"><a href=\"#File-System-Hierarchy\" class=\"headerlink\" title=\"File System Hierarchy\"></a>File System Hierarchy</h2><p>The Linux operating system is structured in a tree-like hierarchy and is documented in the Filesystem Hierarchy Standard (FHS). Linux is structured with the following standard top-level directories:</p>\n<p><img src=\"https://academy.hackthebox.com/storage/modules/18/NEW_filesystem.png\" alt=\"img\"></p>\n<table>\n<thead>\n<tr>\n<th>Path</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x2F;</td>\n<td>The top-level directory is the root filesystem and contains all of the files required to boot the operating system before other filesystems are mounted as well as the files required to boot the other filesystems. After boot, all of the other filesystems are mounted at standard mount points as subdirectories of the root.</td>\n</tr>\n<tr>\n<td>&#x2F;bin</td>\n<td>Contains essential command binaries.</td>\n</tr>\n<tr>\n<td>&#x2F;boot</td>\n<td>Consists of the static bootloader, kernel executable, and files required to boot the Linux OS.</td>\n</tr>\n<tr>\n<td>&#x2F;dev</td>\n<td>Contains device files to facilitate access to every hardware device attached to the system.</td>\n</tr>\n<tr>\n<td>&#x2F;etc</td>\n<td>Local system configuration files. Configuration files for installed applications may be saved here as well.</td>\n</tr>\n<tr>\n<td>&#x2F;home</td>\n<td>Each user on the system has a subdirectory here for storage.</td>\n</tr>\n<tr>\n<td>&#x2F;lib</td>\n<td>Shared library files that are required for system boot.</td>\n</tr>\n<tr>\n<td>&#x2F;media</td>\n<td>External removable media devices such as USB drives are mounted here.</td>\n</tr>\n<tr>\n<td>&#x2F;mnt</td>\n<td>Temporary mount point for regular filesystems.</td>\n</tr>\n<tr>\n<td>&#x2F;opt</td>\n<td>Optional files such as third-party tools can be saved here.</td>\n</tr>\n<tr>\n<td>&#x2F;root</td>\n<td>The home directory for the root user.</td>\n</tr>\n<tr>\n<td>&#x2F;sbin</td>\n<td>This directory contains executables used for system administration (binary system files).</td>\n</tr>\n<tr>\n<td>&#x2F;tmp</td>\n<td>The operating system and many programs use this directory to store temporary files. This directory is generally cleared upon system boot and may be deleted at other times without any warning.</td>\n</tr>\n<tr>\n<td>&#x2F;usr</td>\n<td>Contains executables, libraries, man files, etc.</td>\n</tr>\n<tr>\n<td>&#x2F;var</td>\n<td>This directory contains variable data files such as log files, email in-boxes, web application related files, cron files, and more.</td>\n</tr>\n</tbody></table>\n<h1 id=\"Linux-Distributions\"><a href=\"#Linux-Distributions\" class=\"headerlink\" title=\"Linux Distributions\"></a>Linux Distributions</h1><p><strong>Linux Distributions</strong><br>Linux distributions - or distros - are operating systems based on the Linux kernel. They are used for various purposes, from servers and embedded devices to desktop computers and mobile phones. Each Linux distribution is different, with its own set of features, packages, and tools. Some popular examples include:</p>\n<ul>\n<li>Ubuntu</li>\n<li>Fedora</li>\n<li>CentOS</li>\n<li>Debian</li>\n<li>Red Hat Enterprise Linux</li>\n</ul>\n<p>Many users choose Linux for their desktop computers because it is free, open source, and highly customizable. Ubuntu and Fedora are two popular choices for desktop Linux and beginners. It is also widely used as a server operating system because it is secure, stable, and reliable and comes with frequent and regular updates. Finally, we, as cybersecurity specialists, often prefer Linux because it is open source, meaning its source code is available for scrutiny and customization. Because of such customization, we can optimize and customize our Linux distribution the way we want and configure it for specific use cases only if necessary.</p>\n<p>We can use those distros everywhere, including (web) servers, mobile devices, embedded systems, cloud computing, and desktop computing. For cyber security specialists, some of the most popular Linux distributions are but are not limited to:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>ParrotOS\t&gt; Ubuntu\t&gt; Debian<br>Raspberry Pi OS\t&gt; CentOS\t&gt; BackBox<br>BlackArch\t&gt; Pentoo</p></blockquote>\n<p>The main differences between the various Linux distributions are the included packages, the user interface, and the tools available. Kali Linux is the most popular distribution for cyber security specialists, including a wide range of security-focused tools and packages. Ubuntu is widespread for desktop users, while Debian is popular for servers and embedded systems. Finally, red Hat Enterprise Linux and CentOS are popular for enterprise-level computing.</p>\n<p><strong>Debian</strong><br>Debian is a widely used and well-respected Linux distribution known for its stability and reliability. It is used for various purposes, including desktop computing, servers, and embedded system. It uses an Advanced Package Tool (apt) package management system to handle software updates and security patches. The package management system helps keep the system up-to-date and secure by automatically downloading and installing security updates as soon as they are available. This can be executed manually or set up automatically.</p>\n<p>Debian can have a steeper learning curve than other distributions, but it is widely regarded as one of the most flexible and customizable Linux distros. The configuration and setup can be complex, but it also provides excellent control over the system, which can be good for advanced users. The more control we have over a Linux system, the more complex it feels to become. However, it just feels that way compared to the options and possibilities we get. Without learning it with the required depth, we might spend way more time configuring “easy” tasks and processes than when we would learn to use a few commands and tools more in-depth. We will see it in the Filter Contents and Find Files and Directories sections.</p>\n<p>Stability and reliability are key strengths of Debian. The distribution is known for its long-term support releases, which can provide updates and security patches for up to five years. This can be especially important for servers and other systems that must be up and running 24&#x2F;7. It has had some vulnerabilities, but the development community has quickly released patches and security updates. In addition, Debian has a strong commitment to security and privacy, and the distribution has a well-established security track record. Debian is a versatile and reliable Linux distribution that is widely used for a range of purposes. Its stability, reliability, and commitment to security make it an attractive choice for various use cases, including cyber security.</p>\n<h1 id=\"Introduction-to-Shell\"><a href=\"#Introduction-to-Shell\" class=\"headerlink\" title=\"Introduction to Shell\"></a>Introduction to Shell</h1><p><strong>Introduction to Shell</strong><br>It is crucial to learn how to use the Linux shell, as there are many servers based on Linux. These are often used because Linux is less error-prone as opposed to Windows servers. For example, web servers are often based on Linux. Knowing how to use the operating system to control it effectively requires understanding and mastering Linux’s essential part, the Shell. When we first switched from Windows to Linux, does it look something like this:</p>\n<p><img src=\"https://academy.hackthebox.com/storage/modules/18/first_linux2.png\" alt=\"image\"></p>\n<p>A Linux terminal, also called a shell or command line, provides a text-based input&#x2F;output (I&#x2F;O) interface between users and the kernel for a computer system. The term console is also typical but does not refer to a window but a screen in text mode. In the terminal window, commands can be executed to control the system.</p>\n<p>We can think of a shell as a text-based GUI in which we enter commands to perform actions like navigating to other directories, working with files, and obtaining information from the system but with way more capabilities.</p>\n<p><strong>Terminal Emulators</strong><br>Terminal emulation is software that emulates the function of a terminal. It allows the use of text-based programs within a graphical user interface (GUI). There are also so-called command-line interfaces (CLI) that run as additional terminals in one terminal. In short, a terminal serves as an interface to the shell interpreter.</p>\n<p>Terminal emulators and multiplexers are beneficial extensions for the terminal. They provide us with different methods and functions to work with the terminal, such as splitting the terminal into one window, working in multiple directories, creating different workspaces, and much more. An example of the use of such a multiplexer called Tmux could look something like this:</p>\n<p><img src=\"https://academy.hackthebox.com/storage/modules/18/tmux.png\" alt=\"image\"></p>\n<p><strong>Shell</strong><br>The most commonly used shell in Linux is the Bourne-Again Shell (BASH), and is part of the GNU project. Everything we do through the GUI we can do with the shell. The shell gives us many more possibilities to interact with programs and processes to get information faster. Besides, many processes can be easily automated with smaller or larger scripts that make manual work much easier.</p>\n<p>Besides Bash, there also exist other shells like Tcsh&#x2F;Csh, Ksh, Zsh, Fish shell and others.</p>\n<h1 id=\"Prompt-Description\"><a href=\"#Prompt-Description\" class=\"headerlink\" title=\"Prompt Description\"></a>Prompt Description</h1><p><strong>Prompt Description</strong><br>The bash prompt is easy to understand and, by default, includes information such as the user, hostname, and current working directory. It is a string of characters displayed on the terminal screen that indicates that the system is ready for our input. It typically includes information such as the current user, the computer’s hostname, and the current working directory. The prompt is usually displayed on a new line, and the cursor is positioned after the prompt, ready for the user to start typing a command.</p>\n<p>It can be customized to provide useful information to the user. The format can look something like this:<br> Prompt Description</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;username&gt;@&lt;hostname&gt;&lt;current working directory&gt;$</span><br></pre></td></tr></table></figure>\n<p>The home directory for a user is marked with a tilde &lt;~&gt; and is the default folder when we log in.<br>Prompt Description</p>\n<figure class=\"highlight bash\"><figcaption><span><username>@<hostname>[~]$</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\">The dollar sign, <span class=\"keyword\">in</span> this <span class=\"keyword\">case</span>, stands <span class=\"keyword\">for</span> a user. As soon as we <span class=\"built_in\">log</span> <span class=\"keyword\">in</span> as root, the character changes to a <span class=\"built_in\">hash</span> &lt;<span class=\"comment\">#&gt; and looks like this:</span></span><br><span class=\"line\">Prompt Description</span><br><span class=\"line\">``` bash</span><br><span class=\"line\">root@htb[/htb]<span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n<p>For example, when we upload and run a shell on the target system, we may not see the username, hostname, and current working directory. This may be due to the PS1 variable in the environment not being set correctly. In this case, we would see the following prompts:</p>\n<ul>\n<li><p><strong>Unprivileged - User Shell Prompt</strong><br>Prompt Description</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Privileged - Root Shell Prompt</strong><br>Prompt Description</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n<p>In addition to providing basic information like the current user and working directory, we can customize to display other information in the prompt, such as the IP address, date, time, the exit status of the last command, and more. This is especially useful for us during our penetration tests because we can use various tools and possibilities like script or the .bash_history to filter and print all the commands we used and sort them by date and time. For example, the prompt could be set to display the full path of the current working directory instead of just the current directory name, which can also include the target’s IP address if we work organized.</p>\n</li>\n</ul>\n<p>The prompt can be customized using special characters and variables in the shell’s configuration file (.bashrc for the Bash shell). For example, we can use: the \\u character to represent the current username, \\h for the hostname, and \\w for the current working directory.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Special Character\tDescription</span><br><span class=\"line\">\\d\tDate (Mon Feb 6)</span><br><span class=\"line\">\\D&#123;%Y-%m-%d&#125;\tDate (YYYY-MM-DD)</span><br><span class=\"line\">\\H\tFull hostname</span><br><span class=\"line\">\\j\tNumber of <span class=\"built_in\">jobs</span> managed by the shell</span><br><span class=\"line\">\\n\tNewline</span><br><span class=\"line\">\\r\tCarriage <span class=\"built_in\">return</span></span><br><span class=\"line\">\\s\tName of the shell</span><br><span class=\"line\">\\t\tCurrent time 24-hour (HH:MM:SS)</span><br><span class=\"line\">\\T\tCurrent time 12-hour (HH:MM:SS)</span><br><span class=\"line\">\\@\tCurrent time</span><br><span class=\"line\">\\u\tCurrent username</span><br><span class=\"line\">\\w\tFull path of the current working directory</span><br></pre></td></tr></table></figure>\n<p>Customizing the prompt can be a useful way to make your terminal experience more personalized and efficient. It can also be a helpful tool for troubleshooting and problem-solving, as it can provide important information about the system’s state at any given time.</p>\n<p>In addition to customizing the prompt, we can customize their terminal environment with different color schemes, fonts, and other settings to make their work environment more visually appealing and easier to use.</p>\n<p>However, we see the same as when working on the Windows GUI here. We are logged in as a user on a computer with a specific name, and we know which directory we are in when we navigate through our system. Bash prompt can also be customized and changed to our own needs. The adjustment of the bash prompt is outside the scope of this module. However, we can look at the bash-prompt-generator and powerline, which gives us the possibility to adapt our prompt to our needs.</p>\n<h1 id=\"Getting-Help\"><a href=\"#Getting-Help\" class=\"headerlink\" title=\"Getting Help\"></a>Getting Help</h1><p><strong>Getting Help</strong><br>We will always stumble across tools whose optional parameters we do not know from memory or tools we have never seen before. Therefore it is vital to know how we can help ourselves to get familiar with those tools. The first two ways are the man pages and the help functions. It is always a good idea to familiarize ourselves with the tool we want to try first. We will also learn some possible tricks with some of the tools that we thought were not possible. In the man pages, we will find the detailed manuals with detailed explanations.</p>\n<p><strong>Syntax:</strong><br>Getting Help</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">satvikbash@htb[/htb]$ man &lt;tool&gt;</span><br></pre></td></tr></table></figure>\n\n<p>Let us have a look at an example:</p>\n<p>Example:</p>\n<ul>\n<li>Getting Help<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">satvikbash@htb[/htb]$ man curl</span><br></pre></td></tr></table></figure></li>\n<li>Getting Help<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl(1)                                                             Curl Manual                                                            curl(1)</span><br><span class=\"line\"></span><br><span class=\"line\">NAME</span><br><span class=\"line\">       curl - transfer a URL</span><br><span class=\"line\"></span><br><span class=\"line\">SYNOPSIS</span><br><span class=\"line\">       curl [options] [URL...]</span><br><span class=\"line\"></span><br><span class=\"line\">DESCRIPTION</span><br><span class=\"line\">       curl  is  a tool to transfer data from or to a server, using one of the supported protocols (DICT, FILE, FTP, FTPS, GOPHER, HTTP, HTTPS,  </span><br><span class=\"line\">       IMAP, IMAPS,  LDAP,  LDAPS,  POP3,  POP3S,  RTMP, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET, and TFTP). The <span class=\"built_in\">command</span> is designed to work without user interaction.</span><br><span class=\"line\"></span><br><span class=\"line\">       curl offers a busload of useful tricks like proxy support, user authentication, FTP upload, HTTP post, SSL connections, cookies, file transfer resume, Metalink,  and more. As we will see below, the number of features will make our <span class=\"built_in\">head</span> spin!</span><br><span class=\"line\"></span><br><span class=\"line\">       curl is powered by libcurl <span class=\"keyword\">for</span> all transfer-related features.  See libcurl(3) <span class=\"keyword\">for</span> details.</span><br><span class=\"line\"></span><br><span class=\"line\">Manual page curl(1) line 1 (press h <span class=\"keyword\">for</span> <span class=\"built_in\">help</span> or q to quit)</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>After looking at some examples, we can also quickly look at the optional parameters without browsing through the complete documentation. We have several ways to do that.</p>\n<ul>\n<li><strong>Syntax:</strong><br>Getting Help<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">satvikbash@htb[/htb]$ &lt;tool&gt; --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure></li>\n<li>Example:<br>Getting Help<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">satvikbash@htb[/htb]$ curl --<span class=\"built_in\">help</span></span><br><span class=\"line\"></span><br><span class=\"line\">Usage: curl [options...] &lt;url&gt;</span><br><span class=\"line\">     --abstract-unix-socket &lt;path&gt; Connect via abstract Unix domain socket</span><br><span class=\"line\">     --anyauth       Pick any authentication method</span><br><span class=\"line\"> -a, --append        Append to target file when uploading</span><br><span class=\"line\">     --basic         Use HTTP Basic Authentication</span><br><span class=\"line\">     --cacert &lt;file&gt; CA certificate to verify peer against</span><br><span class=\"line\">     --capath &lt;<span class=\"built_in\">dir</span>&gt;  CA directory to verify peer against</span><br><span class=\"line\"> -E, --cert &lt;certificate[:password]&gt; Client certificate file and password</span><br><span class=\"line\">&lt;SNIP&gt;</span><br></pre></td></tr></table></figure>\nWe can also use the short version of it:</li>\n</ul>\n<p><strong>Syntax:</strong><br>  Getting Help<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">satvikbash@htb[/htb]$ &lt;tool&gt; -h</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>Example:<br>Getting Help<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">satvikbash@htb[/htb]$ curl -h</span><br><span class=\"line\"></span><br><span class=\"line\">Usage: curl [options...] &lt;url&gt;</span><br><span class=\"line\">     --abstract-unix-socket &lt;path&gt; Connect via abstract Unix domain socket</span><br><span class=\"line\">     --anyauth       Pick any authentication method</span><br><span class=\"line\"> -a, --append        Append to target file when uploading</span><br><span class=\"line\">     --basic         Use HTTP Basic Authentication</span><br><span class=\"line\">     --cacert &lt;file&gt; CA certificate to verify peer against</span><br><span class=\"line\">     --capath &lt;<span class=\"built_in\">dir</span>&gt;  CA directory to verify peer against</span><br><span class=\"line\"> -E, --cert &lt;certificate[:password]&gt; Client certificate file and password</span><br><span class=\"line\">&lt;SNIP&gt;</span><br></pre></td></tr></table></figure>\nAs we can see, the results from each other do not differ in this example. Another tool that can be useful in the beginning is apropos. Each manual page has a short description available within it. This tool searches the descriptions for instances of a given keyword.</li>\n</ul>\n<p><strong>Syntax:</strong><br>  Getting Help</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">satvikbash@htb[/htb]$ apropos &lt;keyword&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Example:<br>Getting Help<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">satvikbash@htb[/htb]$ apropos sudo</span><br><span class=\"line\"></span><br><span class=\"line\">sudo (8)             - execute a <span class=\"built_in\">command</span> as another user</span><br><span class=\"line\">sudo.conf (5)        - configuration <span class=\"keyword\">for</span> sudo front end</span><br><span class=\"line\">sudo_plugin (8)      - Sudo Plugin API</span><br><span class=\"line\">sudo_root (8)        - How to run administrative commands</span><br><span class=\"line\">sudoedit (8)         - execute a <span class=\"built_in\">command</span> as another user</span><br><span class=\"line\">sudoers (5)          - default sudo security policy plugin</span><br><span class=\"line\">sudoreplay (8)       - replay sudo session logs</span><br><span class=\"line\">visudo (8)           - edit the sudoers file</span><br></pre></td></tr></table></figure>\nAnother useful resource to get help if we have issues to understand a long command is: <a href=\"https://explainshell.com/\">https://explainshell.com/</a></li>\n</ul>\n<h1 id=\"System-Information\"><a href=\"#System-Information\" class=\"headerlink\" title=\"System Information\"></a>System Information</h1><p>Since we will be working with many different Linux systems, we need<br>to learn the structure and the information about the system, its<br>processes, network configurations, users, directories, user settings,<br>and the corresponding parameters. Here is a list of the necessary tools<br>that will help us get the above information. Most of them are installed<br>by default.</p>\n<table>\n<thead>\n<tr>\n<th>Command</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>whoami</td>\n<td>Displays current username.</td>\n</tr>\n<tr>\n<td>id</td>\n<td>Returns users identity</td>\n</tr>\n<tr>\n<td>hostname</td>\n<td>Sets or prints the name of current host system.</td>\n</tr>\n<tr>\n<td>uname</td>\n<td>Prints basic information about the operating system name and system hardware.</td>\n</tr>\n<tr>\n<td>pwd</td>\n<td>Returns working directory name.</td>\n</tr>\n<tr>\n<td>ifconfig</td>\n<td>The ifconfig utility is used to assign or to view an address to a</td>\n</tr>\n<tr>\n<td>network interface and&#x2F;or configure network interface parameters.</td>\n<td></td>\n</tr>\n<tr>\n<td>ip</td>\n<td>Ip is a utility to show or manipulate routing, network devices, interfaces and tunnels.</td>\n</tr>\n<tr>\n<td>netstat</td>\n<td>Shows network status.</td>\n</tr>\n<tr>\n<td>ss</td>\n<td>Another utility to investigate sockets.</td>\n</tr>\n<tr>\n<td>ps</td>\n<td>Shows process status.</td>\n</tr>\n<tr>\n<td>who</td>\n<td>Displays who is logged in.</td>\n</tr>\n<tr>\n<td>env</td>\n<td>Prints environment or sets and executes command.</td>\n</tr>\n<tr>\n<td>lsblk</td>\n<td>Lists block devices.</td>\n</tr>\n<tr>\n<td>lsusb</td>\n<td>Lists USB devices</td>\n</tr>\n<tr>\n<td>lsof</td>\n<td>Lists opened files.</td>\n</tr>\n<tr>\n<td>lspci</td>\n<td>Lists PCI devices.</td>\n</tr>\n</tbody></table>\n<p>Let us look at a few examples.</p>\n<h3 id=\"Hostname\"><a href=\"#Hostname\" class=\"headerlink\" title=\"Hostname\"></a>Hostname</h3><p>The <code>hostname</code> command is pretty self-explanatory and will just print the name of the computer that we are logged into</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">satvik@htb[/htb]$ hostnamenixfund</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Whoami\"><a href=\"#Whoami\" class=\"headerlink\" title=\"Whoami\"></a>Whoami</h3><p>This quick and easy command can be used on both Windows and Linux<br>systems to get our current username. During a security assessment, we<br>obtain reverse shell access on a host, and one of the first bits of<br>situational awareness we should do is figuring out what user we are<br>running as. From there, we can figure out if the user has any special<br>privileges&#x2F;access.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cry0l1t3@htb[/htb]$ whoamicry0l1t3</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Id\"><a href=\"#Id\" class=\"headerlink\" title=\"Id\"></a>Id</h3><p>The <code>id</code> command expands on the <code>whoami</code><br>command and prints out our effective group membership and IDs. This can<br>be of interest to penetration testers looking to see what access a user<br>may have and sysadmins looking to audit account permissions and group<br>membership. In this output, the <code>hackthebox</code> group is of interest because it is non-standard, the <code>adm</code> group means that the user can read log files in <code>/var/log</code> and could potentially gain access to sensitive information, membership in the <code>sudo</code> group is of particular interest as this means our user can run some or all commands as the all-powerful <code>root</code><br> user. Sudo rights could help us escalate privileges or could be a sign<br>to a sysadmin that they may need to audit permissions and group<br>memberships to remove any access that is not required for a given user<br>to carry out their day-to-day tasks.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cry0l1t3@htb[/htb]$ iduid=1000(cry0l1t3) gid=1000(cry0l1t3) <span class=\"built_in\">groups</span>=1000(cry0l1t3),1337(hackthebox),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),116(lpadmin),126(sambashare)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Uname\"><a href=\"#Uname\" class=\"headerlink\" title=\"Uname\"></a>Uname</h3><p>Let’s dig into the <code>uname</code> command a bit more. If we type <code>man uname</code><br> in our terminal, we will bring up the man page for the command, which<br>will show the possible options we can run with the command and the<br>results.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UNAME(1)                                    User Commands                                   UNAME(1)</span><br><span class=\"line\"></span><br><span class=\"line\">NAME</span><br><span class=\"line\">       <span class=\"built_in\">uname</span> - <span class=\"built_in\">print</span> system information</span><br><span class=\"line\"></span><br><span class=\"line\">SYNOPSIS</span><br><span class=\"line\">       <span class=\"built_in\">uname</span> [OPTION]...</span><br><span class=\"line\"></span><br><span class=\"line\">DESCRIPTION</span><br><span class=\"line\">       Print certain system information.  With no OPTION, same as -s.</span><br><span class=\"line\"></span><br><span class=\"line\">       -a, --all</span><br><span class=\"line\">              <span class=\"built_in\">print</span> all information, <span class=\"keyword\">in</span> the following order, except omit -p and -i <span class=\"keyword\">if</span> unknown:</span><br><span class=\"line\"></span><br><span class=\"line\">       -s, --kernel-name</span><br><span class=\"line\">              <span class=\"built_in\">print</span> the kernel name</span><br><span class=\"line\"></span><br><span class=\"line\">       -n, --nodename</span><br><span class=\"line\">              <span class=\"built_in\">print</span> the network node hostname</span><br><span class=\"line\"></span><br><span class=\"line\">       -r, --kernel-release</span><br><span class=\"line\">              <span class=\"built_in\">print</span> the kernel release</span><br><span class=\"line\"></span><br><span class=\"line\">       -v, --kernel-version</span><br><span class=\"line\">              <span class=\"built_in\">print</span> the kernel version</span><br><span class=\"line\"></span><br><span class=\"line\">       -m, --machine</span><br><span class=\"line\">              <span class=\"built_in\">print</span> the machine hardware name</span><br><span class=\"line\"></span><br><span class=\"line\">       -p, --processor</span><br><span class=\"line\">              <span class=\"built_in\">print</span> the processor <span class=\"built_in\">type</span> (non-portable)</span><br><span class=\"line\"></span><br><span class=\"line\">       -i, --hardware-platform</span><br><span class=\"line\">              <span class=\"built_in\">print</span> the hardware platform (non-portable)</span><br><span class=\"line\"></span><br><span class=\"line\">       -o, --operating-system</span><br><span class=\"line\"></span><br><span class=\"line\">``` bash</span><br><span class=\"line\"></span><br><span class=\"line\">Running `<span class=\"built_in\">uname</span> -a` will <span class=\"built_in\">print</span> all information about the </span><br><span class=\"line\">machine <span class=\"keyword\">in</span> a specific order: kernel name, hostname, the kernel release, </span><br><span class=\"line\">kernel version, machine hardware name, and operating system. The `-a` flag will omit `-p` (processor <span class=\"built_in\">type</span>) and `-i` (hardware platform)  <span class=\"keyword\">if</span> they are unknown.</span><br><span class=\"line\"></span><br><span class=\"line\">``` bash</span><br><span class=\"line\">cry0l1t3@htb[/htb]$ <span class=\"built_in\">uname</span> -aLinux box 4.15.0-99-generic <span class=\"comment\">#100-Ubuntu SMP Wed Apr 22 20:32:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure>\n\n<p>From the above command, we can see that the kernel name is <code>Linux</code>, the hostname is <code>box</code>, the kernel release is <code>4.15.0-99-generic</code>, the kernel version is <code>#100-Ubuntu SMP Wed Apr 22 20:32:56 UTC 2020</code>, and so on. Running any of these options on their own will give us the specific bit output we are interested in.</p>\n<h3 id=\"Uname-to-Obtain-Kernel-Release\"><a href=\"#Uname-to-Obtain-Kernel-Release\" class=\"headerlink\" title=\"Uname to Obtain Kernel Release\"></a>Uname to Obtain Kernel Release</h3><p>Suppose we want to print out the kernel release to search for potential kernel exploits quickly. We can type <code>uname -r</code> to obtain this information.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cry0l1t3@htb[/htb]$ <span class=\"built_in\">uname</span> -r4.15.0-99-generic</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>With this info, we could go and search for “4.15.0-99-generic exploit,” and the first  <a href=\"https://www.exploit-db.com/exploits/47163\">result</a> immediately appears useful to us.</p>\n<p>It is highly recommended to study the commands and understand what<br>they are for and what information they can provide. Though a bit<br>tedious, we can learn much from studying the manpages for common<br>commands. We may even find out things that we did not even know were<br>possible with a given command. This information is not only used for<br>working with Linux. However, it will also be used later to discover<br>vulnerabilities and misconfigurations on the Linux system that may<br>contribute to privilege escalation. Here are a few optional exercises<br>that we can solve for practice purposes, which will help us become<br>familiar with some of the commands.</p>\n<h3 id=\"Logging-In-via-SSH\"><a href=\"#Logging-In-via-SSH\" class=\"headerlink\" title=\"Logging In via SSH\"></a>Logging In via SSH</h3><p><code>Secure Shell</code> (<code>SSH</code>) refers to a protocol<br>that allows clients to access and execute commands or actions on remote<br>computers. On Linux-based hosts and servers running or another Unix-like<br> operating system, SSH is one of the permanently installed standard<br>tools and is the preferred choice for many administrators to configure<br>and maintain a computer through remote access. It is an older and very<br>proven protocol that does not require or offer a graphical user<br>interface (GUI). For this reason, it works very efficiently and occupies<br> very few resources. We use this type of connection in the following<br>sections and in most of the other modules to offer the possibility to<br>try out the learned commands and actions in a safe environment. We can<br>connect to our targets with the following command:</p>\n<h3 id=\"SSH-Login\"><a href=\"#SSH-Login\" class=\"headerlink\" title=\"SSH Login\"></a>SSH Login</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">satvikbash@htb[/htb]$ ssh [username]@[IP address]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Navigation\"><a href=\"#Navigation\" class=\"headerlink\" title=\"Navigation\"></a>Navigation</h1><p>Navigation is essential, like working with the mouse as a standard<br>Windows user. With it, we move across the system and work in directories<br> and with files, we need and want. Therefore, we use different commands<br>and tools to print out information about a directory or a file and can<br>use advanced options to optimize the output to our needs.</p>\n<p>One of the best ways to learn something new is to experiment with it.<br> Here we cover the sections on navigating through Linux, creating,<br>moving, editing, and deleting files and folders, finding them on the<br>operating system, different types of redirects, and what file<br>descriptors are. We will also find shortcuts to make our work with the<br>shell much easier and more comfortable. We recommend experimenting on<br>our locally hosted VM. Ensure we have created a snapshot for our VM in<br>case our system gets unexpectedly damaged.</p>\n<p>Let us start with the navigation. Before we move through the system,<br>we have to find out in which directory we are. We can find out where we<br>are with the command <code>pwd</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cry0l1t3@htb[~]$ <span class=\"built_in\">pwd</span>/home/cry0l1t3</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Only the <code>ls</code> command is needed to list all the contents<br>inside a directory. It has many additional options that can complement<br>the display of the content in the current folder.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cry0l1t3@htb[~]$ lsDesktop  Documents  Downloads  Music  Pictures  Public  Templates  Videos</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Using it without any additional options will display the directories and files only. However, we can also add the <code>-l</code> option to display more information on those directories and files.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cry0l1t3@htb[~]$ <span class=\"built_in\">ls</span> -ltotal 32</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:37 Desktop</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:34 Documents</span><br><span class=\"line\">drwxr-xr-x 3 cry0l1t3 htbacademy 4096 Nov 15 03:26 Downloads</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:34 Music</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:34 Pictures</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:34 Public</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:34 Templates</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:34 Videos</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>First, we see the total amount of blocks (<code>512-byte</code>) used<br> by the files and directories listed in the current directory, which<br>indicates the total size used. That means it used 32 * 512-byte &#x3D; <code>16384 bytes</code> of disk space. Next, we see a few columns that are structured as follows:</p>\n<table>\n<thead>\n<tr>\n<th>Column Content</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>drwxr-xr-x</td>\n<td>Type and permissions</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Number of hard links to the file&#x2F;directory</td>\n</tr>\n<tr>\n<td>cry0l1t3</td>\n<td>Owner of the file&#x2F;directory</td>\n</tr>\n<tr>\n<td>htbacademy</td>\n<td>Group owner of the file&#x2F;directory</td>\n</tr>\n<tr>\n<td>4096</td>\n<td>Size of the file or the number of blocks used to store the directory information</td>\n</tr>\n<tr>\n<td>Nov 13 17:37</td>\n<td>Date and time</td>\n</tr>\n<tr>\n<td>Desktop</td>\n<td>Directory name</td>\n</tr>\n</tbody></table>\n<p>However, we will not see everything that is in this folder. A<br>directory can also have hidden files that start with a dot at the<br>beginning of its name (e.g., <code>.bashrc</code> or <code>.bash_history</code>). Therefore, we need to use the command <code>ls -la</code> to <code>list all</code> files of a directory:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cry0l1t3@htb[~]$ <span class=\"built_in\">ls</span> -latotal 403188</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:37 .bash_history</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:37 .bashrc</span><br><span class=\"line\">...SNIP...</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:37 Desktop</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:34 Documents</span><br><span class=\"line\">drwxr-xr-x 3 cry0l1t3 htbacademy 4096 Nov 15 03:26 Downloads</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:34 Music</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:34 Pictures</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:34 Public</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:34 Templates</span><br><span class=\"line\">drwxr-xr-x 2 cry0l1t3 htbacademy 4096 Nov 13 17:34 Videos</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>To list the contents of a directory, we do not necessarily need to navigate there first. We can also use “<code>ls</code>” to specify the path where we want to know the contents.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cry0l1t3@htb[~]$ <span class=\"built_in\">ls</span> -l /var/total 52</span><br><span class=\"line\">drwxr-xr-x  2 root root     4096 Mai 15 18:54 backups</span><br><span class=\"line\">drwxr-xr-x 18 root root     4096 Nov 15 16:55 cache</span><br><span class=\"line\">drwxrwsrwt  2 root whoopsie 4096 Jul 25  2018 crash</span><br><span class=\"line\">drwxr-xr-x 66 root root     4096 Mai 15 03:08 lib</span><br><span class=\"line\">drwxrwsr-x  2 root staff    4096 Nov 24  2018 <span class=\"built_in\">local</span></span><br><span class=\"line\">&lt;SNIP&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>We can do the same thing to navigate to the directory. To move through the directories, we use the command <code>cd</code>. Let us change to the <code>/dev/shm</code> directory. Of course, we can go to the <code>/dev</code> directory first and then <code>/shm</code>. Nevertheless, we can also enter the full path and jump there.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cry0l1t3@htb[~]$ <span class=\"built_in\">cd</span> /dev/shmcry0l1t3@htb[/dev/shm]$</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Since we were in the home directory before, we can quickly jump back to the directory we were last in.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cry0l1t3@htb[/dev/shm]$ <span class=\"built_in\">cd</span> -cry0l1t3@htb[~]$</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>The shell also offers us the auto-complete function, which makes navigation easier. If we now type <code>cd /dev/s</code> and press <code>[TAB] twice</code>, we will get all entries starting with the letter “<code>s</code>” in the directory of <code>/dev/</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cry0l1t3@htb[~]$ <span class=\"built_in\">cd</span> /dev/s [TAB 2x]shm/ snd/</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>If we add the letter “<code>h</code>” to the letter “<code>s</code>,” the shell will complete the input since otherwise there will be no folders in this directory beginning with the letters “<code>sh</code>”. If we now display all contents of the directory, we will only see the following contents.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cry0l1t3@htb[/dev/shm]$ <span class=\"built_in\">ls</span> -la /dev/shmtotal 0</span><br><span class=\"line\">drwxrwxrwt  2 root root   40 Mai 15 18:31 .</span><br><span class=\"line\">drwxr-xr-x 17 root root 4000 Mai 14 20:45 ..</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>The first entry with a single dot (<code>.</code>) indicates the current directory we are currently in. The second entry with two dots (<code>..</code>) represents the parent directory <code>/dev</code>. This means we can jump to the parent directory with the following command.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cry0l1t3@htb[/dev/shm]$ <span class=\"built_in\">cd</span> ..cry0l1t3@htb[/dev]$</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Since our shell is filled with some records, we can clean the shell with the command <code>clear</code>. First, however, let us return to the directory <code>/dev/shm</code> before and then execute the <code>clear</code> command to clean up our terminal.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cry0l1t3@htb[/dev]$ <span class=\"built_in\">cd</span> shm &amp;&amp; clear</span><br></pre></td></tr></table></figure>\n\n<p>Another way to clean up our terminal is to use the shortcut <code>[Ctrl] + [L]</code>. We can also use the arrow keys (<code>↑</code> or <code>↓</code>)<br> to scroll through the command history, which will show us the commands<br>that we have used before. But we also can search through the command<br>history using the shortcut <code>[Ctrl] + [R]</code> and type some of the text that we are looking for.</p>\n<p><strong>STAY TUNED</strong> 🧑‍💻<br><strong>CONTENT WILL UPDATE SOON</strong> 😁</p>\n","text":"Linux StructureHistoryMany events led up to creating the first Linux kernel and,...","permalink":"/post/HTB/Linux-Fundamentals-Module-HTB","photos":[],"count_time":{"symbolsCount":"35k","symbolsTime":"31 mins."},"categories":[{"name":"cybersecurity","slug":"cybersecurity","count":18,"path":"api/categories/cybersecurity.json"},{"name":"HTB","slug":"cybersecurity/HTB","count":1,"path":"api/categories/cybersecurity/HTB.json"},{"name":"Linux","slug":"cybersecurity/HTB/Linux","count":1,"path":"api/categories/cybersecurity/HTB/Linux.json"}],"tags":[{"name":"cybersecurity","slug":"cybersecurity","count":2,"path":"api/tags/cybersecurity.json"},{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Linux-Structure\"><span class=\"toc-text\">Linux Structure</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#History\"><span class=\"toc-text\">History</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Philosophy\"><span class=\"toc-text\">Philosophy</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Components\"><span class=\"toc-text\">Components</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Linux-Architecture\"><span class=\"toc-text\">Linux Architecture</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#File-System-Hierarchy\"><span class=\"toc-text\">File System Hierarchy</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Linux-Distributions\"><span class=\"toc-text\">Linux Distributions</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Introduction-to-Shell\"><span class=\"toc-text\">Introduction to Shell</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Prompt-Description\"><span class=\"toc-text\">Prompt Description</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Getting-Help\"><span class=\"toc-text\">Getting Help</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#System-Information\"><span class=\"toc-text\">System Information</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Hostname\"><span class=\"toc-text\">Hostname</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Whoami\"><span class=\"toc-text\">Whoami</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Id\"><span class=\"toc-text\">Id</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Uname\"><span class=\"toc-text\">Uname</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Uname-to-Obtain-Kernel-Release\"><span class=\"toc-text\">Uname to Obtain Kernel Release</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Logging-In-via-SSH\"><span class=\"toc-text\">Logging In via SSH</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SSH-Login\"><span class=\"toc-text\">SSH Login</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Navigation\"><span class=\"toc-text\">Navigation</span></a></li></ol>","author":{"name":"Satvik","slug":"blog-author","avatar":"https://media.licdn.com/dms/image/D5603AQHDAkzc5VpLcQ/profile-displayphoto-shrink_800_800/0/1708273426443?e=1721260800&v=beta&t=6mDy44GnhG2deGxjMd9TUFy-WKUpt7jNSNcdJD47uYc","link":"https://media.licdn.com/dms/image/D5603AQHDAkzc5VpLcQ/profile-displayphoto-shrink_800_800/0/1708273426443?e=1721260800&v=beta&t=6mDy44GnhG2deGxjMd9TUFy-WKUpt7jNSNcdJD47uYc","description":"An Aspiring Penetration Tester & a security Enthusiast 🚀 127.0.0.1 / sudo rm -rf / 😁 Dont Drink and Root 👀","socials":{"github":"https://github.com/satvik-vs","twitter":"https://twitter.com/SatvikVemulap2","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"fab fa-instagram","link":"https://instagram.com/satvikshetty"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Sub Domain Enumeration - THM Walkthrough","uid":"5a327520fa9108575adc8c8430f6b8a0","slug":"THM/WEB/Sub-Domain-Enumeration-THM-Walkthrough","date":"2024-05-28T12:45:16.000Z","updated":"2024-05-31T10:33:54.956Z","comments":true,"path":"api/articles/THM/WEB/Sub-Domain-Enumeration-THM-Walkthrough.json","keywords":null,"cover":"https://tryhackme-images.s3.amazonaws.com/room-icons/609f307f6fa5f1f7f39d50154d0d1db3.png","text":"Hello Hackers 💌Today we are going to walkthrough a new room called “ Sub Domain ...","permalink":"/post/THM/WEB/Sub-Domain-Enumeration-THM-Walkthrough","photos":[],"count_time":{"symbolsCount":"6.6k","symbolsTime":"6 mins."},"categories":[{"name":"cybersecurity","slug":"cybersecurity","count":18,"path":"api/categories/cybersecurity.json"},{"name":"THM","slug":"cybersecurity/THM","count":17,"path":"api/categories/cybersecurity/THM.json"},{"name":"web","slug":"cybersecurity/THM/web","count":11,"path":"api/categories/cybersecurity/THM/web.json"}],"tags":[{"name":"tryhackme","slug":"tryhackme","count":17,"path":"api/tags/tryhackme.json"},{"name":"web","slug":"web","count":11,"path":"api/tags/web.json"}],"author":{"name":"Satvik","slug":"blog-author","avatar":"https://media.licdn.com/dms/image/D5603AQHDAkzc5VpLcQ/profile-displayphoto-shrink_800_800/0/1708273426443?e=1721260800&v=beta&t=6mDy44GnhG2deGxjMd9TUFy-WKUpt7jNSNcdJD47uYc","link":"https://media.licdn.com/dms/image/D5603AQHDAkzc5VpLcQ/profile-displayphoto-shrink_800_800/0/1708273426443?e=1721260800&v=beta&t=6mDy44GnhG2deGxjMd9TUFy-WKUpt7jNSNcdJD47uYc","description":"An Aspiring Penetration Tester & a security Enthusiast 🚀 127.0.0.1 / sudo rm -rf / 😁 Dont Drink and Root 👀","socials":{"github":"https://github.com/satvik-vs","twitter":"https://twitter.com/SatvikVemulap2","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"fab fa-instagram","link":"https://instagram.com/satvikshetty"}}}}},"next_post":{"title":"Content Discovery - THM Walkthrough","uid":"ec2c0857db02e59b1fe7edb40ad2f3b4","slug":"THM/WEB/Content-Discovery-THM-Walkthrough","date":"2024-05-27T13:26:57.000Z","updated":"2024-06-03T15:28:31.999Z","comments":true,"path":"api/articles/THM/WEB/Content-Discovery-THM-Walkthrough.json","keywords":null,"cover":"https://tryhackme-images.s3.amazonaws.com/room-icons/2f678b7457e828715a10b8bc02fd65b5.png","text":"Hello Hackers 💌Today we are gonna walkthrough a new room in Web Fundamentals cal...","permalink":"/post/THM/WEB/Content-Discovery-THM-Walkthrough","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"cybersecurity","slug":"cybersecurity","count":18,"path":"api/categories/cybersecurity.json"},{"name":"THM","slug":"cybersecurity/THM","count":17,"path":"api/categories/cybersecurity/THM.json"},{"name":"web","slug":"cybersecurity/THM/web","count":11,"path":"api/categories/cybersecurity/THM/web.json"}],"tags":[{"name":"tryhackme","slug":"tryhackme","count":17,"path":"api/tags/tryhackme.json"},{"name":"web","slug":"web","count":11,"path":"api/tags/web.json"}],"author":{"name":"Satvik","slug":"blog-author","avatar":"https://media.licdn.com/dms/image/D5603AQHDAkzc5VpLcQ/profile-displayphoto-shrink_800_800/0/1708273426443?e=1721260800&v=beta&t=6mDy44GnhG2deGxjMd9TUFy-WKUpt7jNSNcdJD47uYc","link":"https://media.licdn.com/dms/image/D5603AQHDAkzc5VpLcQ/profile-displayphoto-shrink_800_800/0/1708273426443?e=1721260800&v=beta&t=6mDy44GnhG2deGxjMd9TUFy-WKUpt7jNSNcdJD47uYc","description":"An Aspiring Penetration Tester & a security Enthusiast 🚀 127.0.0.1 / sudo rm -rf / 😁 Dont Drink and Root 👀","socials":{"github":"https://github.com/satvik-vs","twitter":"https://twitter.com/SatvikVemulap2","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"fab fa-instagram","link":"https://instagram.com/satvikshetty"}}}}}}